{"version":3,"sources":["counter.js","CounterHooks.js","App.js","index.js"],"names":["Counter","props","state","count","initialCount","console","log","ThemeContext","Consumer","style","onClick","changeCount","reset","amount","this","setState","preState","Component","CounterHooks","useState","setCount","useContext","prevCount","React","createContext","App","theme","setTheme","Provider","value","backgroundColor","prevTheme","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAIqBA,E,kDACjB,WAAaC,GAAS,IAAD,8BACjB,cAAOA,IAEFC,MAAQ,CACTC,MAAOF,EAAMG,cAJA,E,0CAQrB,WAAU,IAAD,OAEL,OADAC,QAAQC,IAAK,wBAET,cAACC,EAAaC,SAAd,UACM,SAAAC,GAAK,OACC,qCACI,wBAAQA,MAAOA,EAAOC,QAAU,kBAAO,EAAKC,aAAc,IAA1D,eACA,+BAAO,EAAKT,MAAMC,QAClB,wBAAQM,MAAOA,EAAOC,QAAU,kBAAO,EAAKC,YAAa,IAAzD,eACA,wBAAQD,QAAU,kBAAO,EAAKE,SAA9B,2B,yBAQxB,SAAaC,GACTC,KAAKC,UAAU,SAAAC,GACX,MAAO,CACHb,MAAOa,EAASb,MAAQU,Q,mBAKpC,WACIC,KAAKC,SAAU,CACPZ,MAAO,Q,GApCcc,aCDtB,SAASC,EAAT,GAA2C,IAAlBd,EAAiB,EAAjBA,aACpCC,QAAQC,IAAK,uBACb,MAA4Ba,mBAAUf,GAAtC,mBAAQD,EAAR,KAAeiB,EAAf,KACMX,EAAQY,qBAAWd,GACzB,OACI,qCACI,wBAAQE,MAAOA,EAAOC,QAAU,kBAAMU,GAAU,SAAAE,GAAS,OAAIA,EAAY,MAAzE,eACA,+BAAOnB,IACP,wBAAQM,MAAOA,EAAOC,QAAU,kBAAMU,GAAU,SAAAE,GAAS,OAAIA,EAAY,MAAzE,eACA,wBAAQZ,QAAU,kBAAMU,EAAU,IAAlC,sBCRL,IAAMb,EAAegB,IAAMC,gBAqBnBC,MAnBf,WACEpB,QAAQC,IAAK,cACb,MAA2Ba,mBAAU,SAArC,mBAAOO,EAAP,KAAcC,EAAd,KAEA,OACE,eAACpB,EAAaqB,SAAd,CAAuBC,MAAQ,CAACC,gBAAiBJ,GAAjD,oBAEE,cAAC,EAAD,CAAStB,aAAc,IACvB,uBAHF,gBAKE,cAACc,EAAD,CAAcd,aAAc,IAC5B,uBACA,wBAAQM,QAAU,kBAAMiB,GAAU,SAAAI,GAChC,MAAqB,QAAdA,EAAsB,OAAS,UADxC,8BCdNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.53815c1e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { ThemeContext } from \"./App\";\n\n\nexport default class Counter extends Component {\n    constructor( props ) {\n        super( props )\n\n        this.state = {\n            count: props.initialCount,\n        }\n    }\n\n    render() {\n        console.log( \"Render Counter Class\")\n        return (\n            <ThemeContext.Consumer>\n                { style => (\n                        <>\n                            <button style={style} onClick={ ()  => this.changeCount( -1 ) }>-</button>\n                            <span>{this.state.count}</span>\n                            <button style={style} onClick={ ()  => this.changeCount( 1 ) }>+</button>\n                            <button onClick={ ()  => this.reset( ) }>Reset</button>\n                        </>  \n                    )\n                }\n            </ThemeContext.Consumer>\n        );\n    }\n\n    changeCount( amount ) {\n        this.setState( preState => { \n            return {\n                count: preState.count + amount \n            } \n        })\n    }\n\n    reset( ) {\n        this.setState( {\n                count: 0\n            } \n        )\n    }\n}","import React, { useContext, useState } from \"react\";\nimport { ThemeContext } from \"./App\";\n\nexport default function CounterHooks ( {initialCount } ) {\n    console.log( \"Render CounterHooks\")\n    const [ count, setCount ] = useState( initialCount )\n    const style = useContext(ThemeContext)\n    return (\n        <>\n            <button style={style} onClick={ () => setCount( prevCount => prevCount - 1 )}>-</button>\n            <span>{count}</span>\n            <button style={style} onClick={ () => setCount( prevCount => prevCount + 1 )}>+</button>\n            <button onClick={ () => setCount( 0 )}>Reset</button>\n        </>\n    )\n}","import React, { useState } from \"react\";\nimport Counter from \"./counter\";\nimport CounterHooks from \"./CounterHooks\";\n\nexport const ThemeContext = React.createContext()\n\nfunction App() {\n  console.log( \"Render App\")\n  const[ theme, setTheme ] = useState( \"green\" );\n\n  return (\n    <ThemeContext.Provider value={ {backgroundColor: theme } }>\n      Counter\n      <Counter initialCount={0} />\n      <br/>\n      Counter Hooks\n      <CounterHooks initialCount={3} />\n      <br/>\n      <button onClick={ () => setTheme( prevTheme => {\n        return prevTheme === \"red\" ? \"blue\" : \"red\"\n      })}>Toggle Theme</button>\n    </ThemeContext.Provider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}